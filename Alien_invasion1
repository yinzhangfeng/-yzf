#12.3.3创建设置类
import sys

import pygame

from settings import Settings

from ship import Ship

import game_function as gf
#导入game_function
from pygame.sprite import Group

from game_stats import GameStats

from time import sleep

from button import Button

from scoreboard import Scoreboard

#from alien import Alienwrer


def run_game():
    ai_settings = Settings()
    screen=pygame.display.set_mode((ai_settings.screen_width,ai_settings.screen_height))
    #初始化游戏并创建一个对象
    pygame.init()
    pygame.display.set_caption("Alien Invasion")
    play_button=Button(ai_settings,screen,"Play")
    #创建一个用于存储游戏统计信息的实例
    stats = GameStats(ai_settings)
    sb=Scoreboard(ai_settings,screen,stats)
    #ai_settings = Settings()
    #screen=pygame.display.set_mode((ai_settings.screen_width,ai_settings.screen_height))
    #pygame.display.set_caption("Alien Invasion")

    #设置背景色
    #bg_color=(230,230,230)
    #创建一艘飞船
    ship=Ship(ai_settings,screen)
    #创建一个用于存储子弹的编组
    bullets = Group() 
    bullets_down = Group() 
    bullets_left = Group() 
    bullets_right = Group() 
    #alien = Alien(ai_settings,screen
    aliens = Group()
    gf.create_fleet(ai_settings,screen,ship,aliens)

    #开始游戏主循环
    while True:
        #监事键盘和鼠标事件
        #for event in pygame.event.get():
         #   if event.type==pygame.QUIT:
          #      sys.exit()
        gf.check_events(ai_settings,screen,stats,play_button,ship,aliens,bullets,bullets_down,bullets_left,bullets_right)
        #每次循环都调用ship的update
        if stats.game_active:
            ship.update()
            gf.update_bullets(ai_settings,screen,stats,sb,ship,aliens,bullets,bullets_down,bullets_left,bullets_right)
            '''bullets.update()

                #删除已经消失的子弹
                for bullet in bullets.copy():
                if bullet.rect.bottom <=0:
                    bullets.remove(bullet)
            print(len(bullets))#确认子弹确实是消失了'''
            gf.update_aliens(ai_settings,stats,screen,ship,aliens,bullets)
        gf.update_screen(ai_settings,screen,stats,sb,ship,aliens,bullets,bullets_down,bullets_left,bullets_right,play_button)

        #每次循环都会重绘屏幕
        screen.fill(ai_settings.bg_color)
        ship.blitme() 

        #让最近绘制的屏幕可见
        pygame.display.flip()

run_game()
